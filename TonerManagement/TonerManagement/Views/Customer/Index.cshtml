
@{
    ViewBag.Title = "Customer";
}
@section styles{
    <link href="~/Content/Customer.css" rel="stylesheet" type="text/css" />
}

<h2>Customer</h2>

<div id="FlexArea">
    <div id="customerDetailsArea">
        <div id="customerDropdown"></div>
        <form id="validateForm">
            <textarea id="postalAddressArea"></textarea>
            <div id="customerPhoneNumber"></div>
        </form>
        <input type="button" value="Save Customer Details" id="saveCustomer"/>
    </div>

    <div id="stockLocationGrid"></div>
</div>

<div id="printerGrid"></div>

@section scripts{
    <script type="text/javascript">
        $("document").ready(function() {

            var customerDropdown = $("#customerDropdown");
            var postalAddressArea = $("#postalAddressArea");
            var customerPhoneNumber = $("#customerPhoneNumber");
            var saveCustomer = $("#saveCustomer");
            var stockLocationGrid = $("#stockLocationGrid");
            var printerGrid = $("#printerGrid");
            var form = $("#validateForm");
            var sourceForHighDetailPrinterGrid;
            var sourceForStockLocation;
            var dataAdapterForStockLocation;
            var dataAdapterForPrinterGrid;
            customerPhoneNumber.jqxInput({ placeHolder: "Customer Phone Number", width: 336 });
            saveCustomer.jqxButton({ width: 120, height: 40 });
            

            var url = '@Url.Action("GetCustomersForUser", "Customer")';
            var source = {
                datatype: 'json',
                datafields: [
                    { name: "customerID" },
                    { name: "customerName" },
                    { name: "customerAddress" },
                    { name: "customerContactNumber" },
                    { name: "Printers" },
                    { name: "StockLocations" },
                    { name: "UserCustomers" }
                ],
                url: url,
                async: false

            }

            var dataAdapterForCustomerDropdown = new $.jqx.dataAdapter(source);
            customerDropdown.jqxDropDownList({
                source: dataAdapterForCustomerDropdown,
                displayMember: "customerName",
                valueMember: "customerID",
                selectedIndex: 0
            });

            var populateStockLocationGrid = function() {
                sourceForStockLocation = {
                    datafields: [
                        { name: 'stockLocationId', type: 'int' },
                        { name: 'customerId', type: 'int' },
                        { name: 'stockLocationName', type: 'string' },
                        { name: 'stockLocationAddress', type: 'string' },
                        { name: 'stockLocationContactNumber', type: 'string' }
                    ],
                    data: { customerId: customerDropdown.jqxDropDownList("getSelectedItem").value },
                    dataType: 'json',
                    url: '@Url.Action("GetStockLocationsForCustomer","StockLocation")'
                }
                dataAdapterForStockLocation = new $.jqx.dataAdapter(sourceForStockLocation);
                stockLocationGrid.jqxGrid({
                    source: dataAdapterForStockLocation,
                    pageable: true,
                    sortable: true,
                    filterable: true,
                    selectionMode: 'none',
                    columns: [
                        { text: "Stock Location Name", dataField: 'stockLocationName', width: "20%" },
                        { text: "Stock Location Address", dataField: 'stockLocationAddress', width: "60" },
                        { text: "Phone Number", dataField: 'stockLocationContactNumber', width: "20%" },
                    ]
                });
            };

            var populatePrinterGrid = function() {
                sourceForHighDetailPrinterGrid = {
                    datafields: [
                        { name: 'PrinterId', type: 'int' },
                        { name: 'PrinterName', type: 'string' },
                        { name: 'CyanLevel', type: 'int' },
                        { name: 'YellowLevel', type: 'int' },
                        { name: 'MagentaLevel', type: 'int' },
                        { name: 'KeyingLevel', type: 'int' },
                        { name: 'CyanCoverage', type: 'float' },
                        { name: 'YellowCoverage', type: 'float' },
                        { name: 'MagentaCoverage', type: 'float' },
                        { name: 'KeyingCoverage', type: 'float' },
                        { name: 'AverageCoverage', type: 'float' }
                    ],
                    data: { customerId: customerDropdown.jqxDropDownList("getSelectedItem").value },
                    dataType: 'json',
                    url: '@Url.Action("GetDetailedPrinterGridForCustomer","Devices")'
                }
                dataAdapterForPrinterGrid = new $.jqx.dataAdapter(sourceForHighDetailPrinterGrid);
                printerGrid.jqxGrid({
                    source: dataAdapterForPrinterGrid,
                    pageable: true,
                    sortable: true,
                    filterable: true,
                    selectionMode: 'none',
                    columns: [
                        { text: "Printer Id", dataField: 'PrinterId', width: "10%" },
                        { text: "Printer Name", dataField: 'PrinterName', width: "9%" },
                        { text: "Cyan Level", dataField: 'CyanLevel', width: "9%" },
                        { text: "Yellow Level", dataField: 'YellowLevel', width: "9%" },
                        { text: "Magenta Level", dataField: 'MagentaLevel', width: "9%" },
                        { text: "Keying Level", dataField: 'KeyingLevel', width: "9%" },
                        { text: "Cyan Coverage", dataField: 'CyanCoverage', width: "9%" },
                        { text: "Yellow Coverage", dataField: 'YellowCoverage', width: "9%" },
                        { text: "Magenta Coverage", dataField: 'MagentaCoverage', width: '9%' },
                        { text: "Keying Coverage", dataField: 'KeyingCoverage', width: '9%' },
                        {text:"Average Coverage", dataField: 'AverageCoverage',width:'9%'}
                    ]
                });

            }

            customerDropdown.on('bindingComplete',
                function() {
                    var dataForCustomerDropdown =
                        { customerId: customerDropdown.jqxDropDownList("getSelectedItem").value };
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetCustomer", "Customer")',
                        data: dataForCustomerDropdown,
                        dataType: 'json',
                        contentType: 'application/json',
                        success: function(response) {
                            if (response.success) {
                                customerPhoneNumber.val(response.customer.customerContactNumber);
                                postalAddressArea.val(response.customer.customerAddress);
                                populateStockLocationGrid();
                                populatePrinterGrid();
                            } else {
                                alert("An error occured " + response.errorMessage);
                            }
                        },
                        error: function(xhr) {
                            alert("An error occured " + xhr.status + " " + xhr.statusMessage);
                        }


                    });
                });
            customerDropdown.on('select',
                function() {
                    stockLocationGrid.jqxGrid('updateBoundData');
                    printerGrid.jqxGrid('updateBoundData');
                });

            

            postalAddressArea.jqxTextArea({
                placeHolder: "Enter a customer address",
                height: 140
            });

            form.jqxValidator({
                hintType: 'tooltip',
                rules: [
                    {
                        input: '#postalAddressArea',
                        message: 'An Address is required',
                        rule: 'required',
                        action: 'blur'
                    },
                    {
                        input: '#customerPhoneNumber',
                        message: 'A phone number is required',
                        rule: 'required',
                        action: 'blur'
                    }
                ]
            });

            saveCustomer.on('click',
                function() {
                    form.jqxValidator('validate');
                });

            form.on('validationSuccess',
                function() {
                    var dataForSending = {
                        customerId: customerDropdown('getSelectedItem').value,
                        customerPostalAddress: postalAddressArea.val,
                        customerPhoneNumber:customerPhoneNumber.val
                    }
                    $.ajax({
                        type: 'POST',
                        contentType: "application/json",
                        dataType: 'json',
                        data: dataForSending,
                        url: '@Url.Action("UpdateCustomer","Customer")',
                        success: function() {
                            alert("Customer Successfully Updated");
                        },
                        error: function(xhr) {
                            alert("An error occured " + xhr.status + xhr.statusMessage);
                        }

                    });
                });

        });

    </script>
}